@model List<Scrapuncle.Models.ApplicationUser>
@{
    ViewData["Title"] = "Manage Users";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4 mt-4">
    <h2 class="fw-bold text-dark">Manage Users</h2>
    <p class="text-muted mb-3">Here you can manage all registered users. You can view, edit, or deactivate user accounts.</p>

    <!-- search -->
    <div class="mb-3">
        <input type="text" class="form-control" placeholder="Search by name or email" id="userSearch">
    </div>

    <!-- users -->
    <div class="card shadow-sm border-0">
        <div class="card-header bg-white px-3 py-2 border-bottom">
            <h5 class="mb-0">Registered Users</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-bordered table-striped mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Location</th>
                            @* <th>Role</th> *@
                            @* <th>Action</th> *@
                        </tr>
                    </thead>
                    <tbody id="usersTableBody">
                        @if (Model != null && Model.Count > 0)
                        {
                            int count = 1;
                            foreach (var user in Model)
                            {
                                <tr>
                                    <td>@count</td>
                                    <td>@user.FullName</td>
                                    <td>@user.Email</td>
                                    <td>@user.PhoneNumber</td>
                                    <td>@user.Location</td>
                                    @* <td>@user.Role</td> *@
                                    @* <td>
                    <button class="btn btn-danger btn-sm deactivate-btn" data-userid="@user.Id" data-username="@user.FullName">Deactivate</button>
                </td> *@
                                </tr>
                                count++;
                            }
                        }
                        else
                        {
                            <tr id="noUsersRow">
                                <td colspan="6" class="text-center py-4">
                                    <div class="text-muted">
                                        <i class="bi bi-people fs-1"></i>
                                        <h5 class="mt-2">No users found</h5>
                                        <p>Try adjusting your search or check back later</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>

<!-- modal for deactivate -->
@* <div class="modal fade" id="deactivateModal" tabindex="-1" aria-labelledby="deactivateModalLabel" aria-hidden="true"> *@
@*     <div class="modal-dialog"> *@
@*         <div class="modal-content"> *@
@*             <div class="modal-header"> *@
@*                 <h5 class="modal-title" id="deactivateModalLabel">Deactivate User</h5> *@
@*                 <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> *@
@*             </div> *@
@*             <div class="modal-body"> *@
@*                 <p>Are you sure you want to deactivate <span id="userToDeactivate" class="fw-bold"></span>'s account?</p> *@
@*                 <p class="text-muted small">The user will no longer be able to access the system until reactivated.</p> *@
@*             </div> *@
@*             <div class="modal-footer"> *@
@*                 <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button> *@
@*                 <button type="button" class="btn btn-danger" id="confirmDeactivate">Deactivate</button> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const userSearch = document.getElementById('userSearch');
        const noUsersRow = document.getElementById('noUsersRow');
        // const userToDeactivate = document.getElementById('userToDeactivate');
        // const confirmDeactivate = document.getElementById('confirmDeactivate');

        // search
        userSearch.addEventListener('input', function () {
            const searchText = this.value.toLowerCase();
            let hasMatches = false;
            const rows = document.querySelectorAll('tbody tr:not(#noUsersRow)');

            rows.forEach(function (row) {
                const rowText = row.textContent.toLowerCase();
                if (rowText.includes(searchText)) {
                    row.style.display = '';
                    hasMatches = true;
                } else {
                    row.style.display = 'none';
                }
            });

            // Toggling no users message
            noUsersRow.style.display = (!hasMatches && searchText.length > 0) ? '' : 'none';
        });

        // deactivate
        let currentUserId = null;

        // document.addEventListener('click', function (e) {
        //     if (e.target.classList.contains('deactivate-btn')) {
        //         currentUserId = e.target.dataset.userid;
        //         const username = e.target.dataset.username;
        //         userToDeactivate.textContent = username;

        //         show modal using Bootstrap
        //         const modal = document.getElementById('deactivateModal');
        //         const bsModal = new bootstrap.Modal(modal);
        //         bsModal.show();
        //     }
        // });

        // confirm deactivation
        // confirmDeactivate.addEventListener('click', function () {
        //     if (currentUserId) {
        //         console.log(`Deactivating user with ID: ${currentUserId}`);

        //         hide modal using Bootstrap 5
        //         const modal = document.getElementById('deactivateModal');
        //         const bsModal = bootstrap.Modal.getInstance(modal);
        //         bsModal.hide();

        //         alert(`User ID ${currentUserId} has been deactivated successfully!`);
        //     }
        // });
    });
</script>